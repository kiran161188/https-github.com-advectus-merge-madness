# # backmerge develop to branch

# #### Usage:
#   `path/to/ruby backmerge_develop_to_branch.rb absolute_path_to_git_checkout branch`
# 
# *NOTE:* this script is designed to run without user interaction via jenkins

abort "usage: ruby backmerge_develop_to_branch.rb absolute_path_to_git_checkout branch" if ARGV.length != 2

# @param     {String}   git_checkout        where things live in git
# @param     {String}   branch              the name of the branch to merge develop into

@git_checkout = "#{ARGV[0]}"
@branch = "#{ARGV[1]}"

# @param     {String}   create_date         Is set automatically by system time, used by @date param
# @param     {String}   date                Is set automatically by system time, used in the tag creation process

@create_date = Time.new
@date = "#{@create_date.year}"+((@create_date.month<10) ? "0#{@create_date.month}" : "#{@create_date.month}") + ((@create_date.day<10) ? "0#{@create_date.day}" : "#{@create_date.day}")

# ## scripty bits

# ##### validate params before run

puts "FROM: develop"
puts "TO: #{@branch}"
puts "GIT location: #{@git_checkout}"
puts "Date: #{@date}"

# ##### fetch udpates from remote

system("cd #{@git_checkout};git fetch")

# ##### update develop branch

system("cd #{@git_checkout};git checkout develop")
system("cd #{@git_checkout};git pull origin develop")

# ##### update feature branch

system("cd #{@git_checkout};git checkout #{@branch}")
system("cd #{@git_checkout};git pull origin #{@branch}")

# ##### validate develop and feature say up to date
# NOTE: not needed by this script

system("cd #{@git_checkout};git remote show origin")

# ### Do Tag before merge from develop

puts "merging develop to #{@branch}"
puts "taggin: TAG_BEFORE_MERGE_FROM_DEVELOP_TO_#{@branch.upcase}_#{@date} -m 'before merge from develop to #{@branch}'"
system("cd #{@git_checkout};git tag -a TAG_BEFORE_MERGE_FROM_DEVELOP_TO_#{@branch.upcase}_#{@date} -m 'before merge from develop to #{@branch}'")

# ### Do merge from develop

system("cd #{@git_checkout};git merge develop --no-commit --no-ff")

# ### Commit merge to branch

system("cd #{@git_checkout};git commit -am 'merged develop to #{@branch}'")

# ### Do Tag after merge

puts "tagging: TAG_AFTER_MERGE_FROM_DEVELOP_TO_#{@branch.upcase!}_#{@date} -m 'after merge from develop to #{@branch}'"
system("cd #{@git_checkout};git tag -a TAG_AFTER_MERGE_FROM_DEVELOP_TO_#{@branch.upcase}_#{@date} -m 'after merge from develop to #{@branch}'")

# ### PUSH!!!

system("cd #{@git_checkout};git push origin #{@branch}")
system("cd #{@git_checkout};git push origin TAG_BEFORE_MERGE_FROM_DEVELOP_TO_#{@branch.upcase}_#{@date}")
system("cd #{@git_checkout};git push origin TAG_AFTER_MERGE_FROM_DEVELOP_TO_#{@branch.upcase}_#{@date}")

puts "all done"

